"""
Django settings for villen project.

Generated by 'django-admin startproject' using Django 5.2.

For more information, see:
https://docs.djangoproject.com/en/5.2/topics/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
import dj_database_url

# Base directory magic — where the heart of your project beats
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env — secrets kept safe, magic unlocked
load_dotenv()

# SECURITY WARNING: keep the secret key secret in production!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-no29r7e23af(enta!e0-4r)duhsbyp2bggo7x_xdt*xfhxw^3^')

# Toggle debug mode: True for development, False for production
DEBUG = True

# Allowed hosts for local & dev testing
ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'web-soz1.onrender.com', 'villen.me', 'www.villen.me', '.villen.me']

# Application stack - the soul of your app
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'corsheaders',
    'whitenoise.runserver_nostatic',
    'whitenoise',
    # Allauth apps
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    # Social providers
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.github',

    'tools',
]

# Middleware stack - the guardians of your app’s request & response
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # CORS must come early
    'whitenoise.middleware.WhiteNoiseMiddleware',  # static files handling
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',

]

ROOT_URLCONF = 'villen.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  # add if you have custom templates folders
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'villen.wsgi.application'

# Database configuration - environment friendly
DATABASE_URL = os.getenv('DATABASE_URL')

if DATABASE_URL:
    # Agar DATABASE_URL mil gaya toh use kar PostgreSQL ya koi external DB
    DATABASES = {
        'default': dj_database_url.config(default=DATABASE_URL)
    }
else:
    # Nahi toh default SQLite use karo (dev friendly)
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / "db.sqlite3",
        }
    }


# Password validation - keep your users safe
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization — time, language, and magic
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static & media files - assets of your beautiful project
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Whitenoise for smooth static file serving (especially on platforms like Heroku)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
    }
}


# Email setup - for your contact forms and more
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER', 'queenvillen00007@gmail.com')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', 'whbi joeb tshw sjrs')  # NEVER hardcode passwords in real life!
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Login redirect URLs
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# Security: cookies and CSRF
CSRF_COOKIE_SECURE = False  # Keep False in dev, True in prod
SESSION_COOKIE_SECURE = False

CSRF_TRUSTED_ORIGINS = [
    "https://www.villen.me",
]

# Proxy SSL header - helpful when behind reverse proxy like nginx
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# CORS allowed origins - frontends or clients allowed to talk to your API
CORS_ALLOWED_ORIGINS = [
    "https://villen.me",
    "http://localhost:3000",
    "http://localhost:8000",
    "https://web-soz1.onrender.com",
]

# Google reCAPTCHA keys for spam protection (replace with your keys)
RECAPTCHA_PUBLIC_KEY = os.getenv('RECAPTCHA_PUBLIC_KEY', '6LfkplMrAAAAAGf1yIgCxo2dbFK7HbdwHz59oJnZ')
RECAPTCHA_PRIVATE_KEY = os.getenv('RECAPTCHA_PRIVATE_KEY', '6LfkplMrAAAAALATSM7FPekaA6Tw8mz8A4Cw_Wvl')

# Logging - capture warnings and errors
LOG_DIR = BASE_DIR / 'logs'
LOG_DIR.mkdir(parents=True, exist_ok=True)
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': LOG_DIR / 'django.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'WARNING',
            'propagate': True,
        },
    },
}


SITE_ID = 1

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # Default
    'allauth.account.auth_backends.AuthenticationBackend',  # For allauth
)

LOGIN_REDIRECT_URL = 'core:home'
LOGOUT_REDIRECT_URL = 'core:home'

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': 'tumhara-google-client-id',
            'secret': 'tumhara-google-client-secret',
            'key': ''
        }
    },
    'github': {
        'APP': {
            'client_id': 'Ov23liCMsjB8TW59UcYF',
            'secret': 'd30185165685deba496eced7598255b291407bb8',
            'key': ''
        }
    }
}
